/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManagePerson;

/**
 *
 * @author ftl
 */

import Business.Business;
import Business.Person;
import Business.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ManagePersonJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;
    private Person person;
    /**
     * Creates new form ManagePersonJPanel
     */
    public ManagePersonJPanel(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        populateTable();
    }

    public void populateTable() {
        String allUserId = "";
        DefaultTableModel dtm = (DefaultTableModel) personTbl.getModel();
        dtm.setRowCount(0);
        for (Person person: business.getPersonDir().getPersonList()) {
            Object[] row = new Object[3];
            row[0] = person;
            row[1] = person.getLastName();
            for (UserAccount ua: business.getUaDir().getUserAccountList()) {
                if(person.equals(ua.getPerson())) {
                    allUserId += ua.getUserId() + ", ";
                }
            }
            row[2] = allUserId;
            allUserId = "";
            
            dtm.addRow(row);
        }
    }
    
    public Person selectedPerson() {
        int row = personTbl.getSelectedRow();
        if(row<0) {
             JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return null;
        }
        person = (Person)personTbl.getValueAt(row, 0);
        return person;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        findPersonBtn = new javax.swing.JButton();
        newPersonBtn = new javax.swing.JButton();
        updatePersonBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        personTbl = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        deletePersonBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        findPersonBtn.setText("Find Person >");
        findPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPersonBtnActionPerformed(evt);
            }
        });

        newPersonBtn.setText("New Person >");
        newPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPersonBtnActionPerformed(evt);
            }
        });

        updatePersonBtn.setText("View / Update Person >");
        updatePersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePersonBtnActionPerformed(evt);
            }
        });

        personTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(personTbl);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setText("Manage Person");

        deletePersonBtn.setText("DELETE Person");
        deletePersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePersonBtnActionPerformed(evt);
            }
        });

        backBtn.setText("< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(updatePersonBtn)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(deletePersonBtn)
                                                .addGap(39, 39, 39)
                                                .addComponent(newPersonBtn))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(backBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(findPersonBtn)))
                                .addGap(34, 34, 34))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findPersonBtn)
                    .addComponent(backBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPersonBtn)
                    .addComponent(deletePersonBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatePersonBtn)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void findPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findPersonBtnActionPerformed
        // TODO add your handling code here:
        SearchPersonJPanel panel = new SearchPersonJPanel(userProcessContainer, business);
        userProcessContainer.add("SearchPersonJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_findPersonBtnActionPerformed

    private void newPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPersonBtnActionPerformed
        // TODO add your handling code here:
        NewPersonJPanel panel = new NewPersonJPanel(userProcessContainer, business);
        userProcessContainer.add("NewPersonJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_newPersonBtnActionPerformed

    private void updatePersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePersonBtnActionPerformed
        // TODO add your handling code here:
        if (selectedPerson() == null)
            return;
        else
           person = selectedPerson();
        
        UpdatePersonJPanel panel = new UpdatePersonJPanel(userProcessContainer, business, person);
        userProcessContainer.add("UpdatePersonJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_updatePersonBtnActionPerformed

    private void deletePersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePersonBtnActionPerformed
        // TODO add your handling code here:
        if (selectedPerson() == null)
            return;
        else
           person = selectedPerson();
        
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure to DELETE this account?\n"
                + "This will also DELETE ALL the USER ACCOUNTS under the Person.", null, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            business.getPersonDir().deletePerson(person);
            for (UserAccount ua: business.getUaDir().getUserAccountList()) {
                if (ua.getPerson() == person) 
                    business.getUaDir().deleteUserAccount(ua);
            }
        }
        else
           return;
        personTbl.removeAll();
        populateTable();
    }//GEN-LAST:event_deletePersonBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deletePersonBtn;
    private javax.swing.JButton findPersonBtn;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newPersonBtn;
    private javax.swing.JTable personTbl;
    private javax.swing.JButton updatePersonBtn;
    // End of variables declaration//GEN-END:variables
}
